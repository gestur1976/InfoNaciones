# Query: NativeNames
# ContextLines: 1

26 results - 3 files

src/Entity/Country.php:
   76  
   77  
   78:     #[ORM\OneToMany(mappedBy: 'cca3', targetEntity: CountryNativeName::class, orphanRemoval: true)]
   79:     private Collection $countryNativeName;

   79  
   80  

   82          $this->domainSuffix = new ArrayCollection();
   83          $this->domainSuffix = new ArrayCollection();
   84:         $this->countryNativeName = new ArrayCollection();

   84      }
   85      }

  307      /**
  308      /**
  309:      * @return Collection<int, CountryNativeName>

  309       */
  310       */
  311:     public function getCountryNativeName(): Collection

  311      {
  312      {
  313:         return $this->countryNativeName;

  313      }
  314  
  315  
  316:     public function addCountryNativeName(CountryNativeName $countryNativeName): static

  316      {
  317      {
  318:         if (!$this->countryNativeName->contains($countryNativeName)) {
  319:             $this->countryNativeName->add($countryNativeName);

  319              $countryNativeName->setCca3($this);
  320              $countryNativeName->setCca3($this);

  324  
  325  
  326:     public function removeCountryNativeName(CountryNativeName $countryNativeName): static

  326      {
  327      {
  328:         if ($this->countryNativeName->removeElement($countryNativeName)) {
  328              // set the owning side to null (unless already changed)
  329              // set the owning side to null (unless already changed)

src/Entity/CountryNativeName.php:
   3  
   4  
   5: use App\Repository\CountryNativeNameRepository;

   5  use Doctrine\ORM\Mapping as ORM;
   6  
   7  
   8: #[ORM\Entity(repositoryClass: CountryNativeNameRepository::class)]
   9: class CountryNativeName

   9  {
  10  {

  14  
  15  
  16:     #[ORM\ManyToOne(inversedBy: 'countryNativeName')]
  16      #[ORM\JoinColumn(nullable: false)]
  17      #[ORM\JoinColumn(nullable: false)]

src/Repository/CountryNativeNameRepository.php:
   4  
   5: use App\Entity\CountryNativeName;
   6  use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;

   9  /**
  10:  * @extends ServiceEntityRepository<CountryNativeName>
  11   *
  12:  * @method CountryNativeName|null find($id, $lockMode = null, $lockVersion = null)
  13:  * @method CountryNativeName|null findOneBy(array $criteria, array $orderBy = null)
  14:  * @method CountryNativeName[]    findAll()
  15:  * @method CountryNativeName[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
  16   */
  17: class CountryNativeNameRepository extends ServiceEntityRepository
  18  {

  20      {
  21:         parent::__construct($registry, CountryNativeName::class);
  22      }

  24  //    /**
  25: //     * @return CountryNativeName[] Returns an array of CountryNativeName objects
  26  //     */

  38  
  39: //    public function findOneBySomeField($value): ?CountryNativeName
  40  //    {
